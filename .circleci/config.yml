version: 2.1

workflows:
  workflow:
    jobs:
      - test_python_34
      - test_old_pythons:
          matrix:
            parameters:
              python_version: ["2.7", "3.5"]
      - test:
          matrix:
            parameters:
              python_version:
                ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
      - test_old_pypy:
          matrix:
            parameters:
              python_version: ["2.7"]
      - test_pypy:
          matrix:
            parameters:
              python_version: ["3.7", "3.8", "3.9", "3.10"]
      - lint-rst
      - clang-format

jobs:
  # `cimg/python` doesn't support Python 3.4,
  # but old `circleci/python` is still around!
  test_python_34:
    steps:
      - checkout
      - run:
          name: Test
          command: python setup.py test
    docker:
      - image: circleci/python:3.4

  test_old_pythons: &old_python_tests
    parameters:
      python_version:
        type: string
    steps:
      - checkout
      - run:
          name: Test
          command: python setup.py test
    docker:
      - image: cimg/python:<<parameters.python_version>>

  test_old_pypy:
    <<: *old_python_tests
    docker:
      - image: pypy:<<parameters.python_version>>

  test: &tests
    parameters:
      python_version:
        type: string
    steps:
      - checkout
      - run:
          name: Install ciso8601
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade build
            python -m build -s
            pip install dist/ciso8601-*.tar.gz
      - run:
          name: Install testing dependencies
          command: |
            . venv/bin/activate
            pip install pytz
      - run:
          name: Test
          command: |
            . venv/bin/activate
            python -m unittest
    docker:
      - image: cimg/python:<<parameters.python_version>>

  test_pypy:
    <<: *tests
    docker:
      - image: pypy:<<parameters.python_version>>

  lint-rst:
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Install lint tools
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install Pygments restructuredtext-lint
      - run:
          name: Lint
          command: |
            . venv/bin/activate
            rst-lint --encoding=utf-8 README.rst
    docker:
      - image: cimg/python:3.13

  clang-format:
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Install lint tools
          command: |
            sudo apt-get update -y
            sudo apt-get install -y clang-format
      - run:
          name: Lint
          command: |
            SOURCE_FILES=`find ./ -name \*.c -type f -or -name \*.h -type f`
            for SOURCE_FILE in $SOURCE_FILES
            do
              export FORMATTING_ISSUE_COUNT=`clang-format -output-replacements-xml $SOURCE_FILE | grep offset | wc -l`
              if [ "$FORMATTING_ISSUE_COUNT" -gt "0" ]; then
                echo "Source file $SOURCE_FILE contains formatting issues. Please use clang-format tool to resolve found issues."
                exit 1
              fi
            done
    docker:
      - image: cimg/python:3.13
